{"version":3,"sources":["components/buildComponents.js","components/Map.js","components/truthTable.js","components/optionButton.js","components/KMap.js","index.js"],"names":["TableSquare","className","this","props","value","React","Component","SelectionButton","onClick","Square","id","i","j","Map","squares","key","typeMap","a","t","push","renderSquare","generateMapRow","renderMapRow","check","temp","alp","flag","string","renderMapHead","renderHeader","renderCol","renderMapHeaderRow","rendeMapReaderCol","renderMap","TruthTable","sel","perm","setRowOrColCell","k","val","Permutation","html","Math","pow","renderTableSquare","renderTableCol2","renderTableCol","renderTablePermutation","TableH","alphabet","renderTableHead","renderTableRow","TableValSelection","r","c","l","renderSelectionButton","OptionButton","setTypeMap","typeSol","setTypeSol","setMatrixSquare","KarnaughMap","getMatrixSquare","p","getMatrixPerm","m","setCoord","state","dim","col","row","count","reset","setState","$","prop","removeClass","remove","hide","css","floor","b","type","dimCol","dimRow","groups","Array","index","CountVer","TempI","TempJ","ok","count2","height","isPower","pop","column","depth","isOk","x","Row","console","log","GroupUp","extend","values","obj1","obj2","group1","group2","startrow","startCol","shift","length","sort","Endrow","EndCol","equal","v","z","CleanAlgorithm","reverse","found","deleted","obj11","findIndex","Solution","drawGroup","elementoR","elementoC","coord","ner","matrice","soln","vettoreSol","tipoSol","charAt","substr","drawSolution","color","FirstElCol","FirstElRow","element","attr","after","append","right","checkElInGroups","bottom","left","top","addClass","lato","matrix","show","costo","s","cls","parseInt","handleClick","Algorithm","y","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9456d777.chunk.js","sourcesContent":["import React from 'react';\nimport './css/buildComponents.css';\n\n\nexport class TableSquare extends React.Component{       \n    render(){\n        return (\n            <div className={this.props.className}> {this.props.value}</div>\n          );\n    }\n  }\n  \n  export class SelectionButton extends React.Component {  \n    render(){\n        return (\n        <div className=\"selectionButton\">\n          <button className=\"btn btn-Tab\" onClick={this.props.onClick}>\n            {this.props.value}\n          </button>\n        </div>\n      );\n    }\n  }\n\n  export class Square extends React.Component {\n       render(){\n        return (\n            <div className=\"mapSquare\" onClick={this.props.onClick}>\n              <button className=\"btnMap\">\n                {this.props.value}\n                <div className=\"\" id={\"\" + this.props.i + this.props.j}></div>\n              </button>\n            </div>\n          );\n       } \n    }\n","import React from 'react';\nimport './css/Map.css';\nimport {TableSquare,Square} from './buildComponents.js';\n\n\nexport default class Map extends React.Component {\n    //metodi per renderizzare la mappa\n    renderSquare(i, j) {\n      return (\n        <Square\n          value={this.props.squares[i][j][0]}\n          i={i}\n          j={j}\n          onClick={() => this.props.onClick(i, j)}\n          key={i + j}\n        />\n      );\n    }\n  \n    generateMapRow(i) {\n      const typeMap = this.props.typeMap;\n      let a = [];\n      let t = typeMap;\n      if (typeMap === 3)\n        t = 4;\n      for (let j = 0; j < t; j++)\n        a.push(this.renderSquare(i, j));\n  \n      return a;\n    }\n    renderMapRow(i) {\n      return (\n        <div className=\"board-row\" key={i}>\n          {this.generateMapRow(i)}\n        </div>\n      );\n    }\n    renderMap() {\n      const typeMap = this.props.typeMap;\n      let a = [];\n      let t = typeMap;\n      if (typeMap === 3)\n        t = 2;\n      for (let i = 0; i < t; i++)\n        a.push(this.renderMapRow(i));\n  \n      return a;\n    }\n    //metodi per renderizzare gli elementi ai lati della mappa\n    renderMapHead(check, a, className) {\n      const typeMap = this.props.typeMap;\n      if (check)\n        return (\n          <TableSquare\n            value={a}\n            key={a}\n            className={className} />\n        );\n      else {\n        let temp = [];\n        let alp = [\"A\", \"B\", \"C\", \"D\"];\n        let flag = false;\n        let i = 0\n        for (; i < typeMap; i++) {\n          if ((typeMap !== 2 && i === 2) || (typeMap === 2 && i === 1)) {\n            temp.push(<hr key={\"hr\"} />);\n            flag = true;\n          }\n          if (!flag)\n            temp.push(<div className=\"mapVariableTop\" key={i} >{alp[i]}</div>);\n          else\n            temp.push(<div className=\"mapVariableBot\" key={i} >{alp[i]}</div>);\n  \n        }\n  \n        return (\n          <TableSquare\n            value={temp}\n            key={++i}\n            className={className} />\n        );\n      }\n  \n    }\n  \n    renderHeader() {\n      const typeMap = this.props.typeMap;\n      let string = [\"00\", \"01\", \"11\", \"10\"];\n      let t = typeMap;\n      let a = [];\n      if (typeMap === 3)\n        t = 4;\n      if (typeMap === 2)\n        string = [\"0\", \"1\"];\n      a.push(this.renderMapHead(0, \"\", \"headerSquare\"));\n      for (let i = 0; i < t; i++)\n        a.push(this.renderMapHead(1, string[i], \"headerSquare\"));\n  \n      return a;\n  \n    }\n    renderMapHeaderRow(i) {\n      return <div className=\"board-row\" key={i}> {this.renderHeader()} </div>\n    }\n  \n    renderCol() {\n      const typeMap = this.props.typeMap;\n      let string = [\"00\", \"01\", \"11\", \"10\"];\n      let t = typeMap;\n      let a = [];\n      if (typeMap === 2 || typeMap === 3) {\n        string = [\"0\", \"1\"];\n        t = 2;\n      }\n  \n      for (let i = 0; i < t; i++)\n        a.push(this.renderMapHead(1, string[i], \"headerSquare\"));\n  \n      return a;\n  \n    }\n  \n    rendeMapReaderCol(i) {\n      return <div className=\"map-col\" key={i}> {this.renderCol()} </div>\n    }\n  \n    render() { //Definisco la struttura della mappa\n      let i = 0;\n      return (\n        <div key={i++}>\n          {this.renderMapHeaderRow(i++)}\n          {this.rendeMapReaderCol(i++)}\n          <div className=\"map\">\n            {this.renderMap()}\n          </div>\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport './css/truthTable.css';\nimport {TableSquare, SelectionButton} from './buildComponents.js';\n\n\nexport default class TruthTable extends React.Component {\n  \n    render() {\n      const sel = this.props.squares;\n      const typeMap = this.props.typeMap;\n      const perm = this.props.perm;\n      let i = 0;\n  \n      return (\n        <div key={i++}>\n          <TableH\n            typeMap={typeMap}\n            key={i++} />\n          <div className=\"bodyTruthTable\" key={i++}>\n            <Permutation\n              key={i++}\n              typeMap={typeMap}\n              perm={perm}\n            />\n            <TableValSelection\n              squares={sel}\n              typeMap={typeMap}\n              perm={perm}\n              key={i++}\n              onClick={(i, j) => this.props.onClick(i, j)}\n              setRowOrColCell={(i, j, k, val) => this.props.setRowOrColCell(i, j, k, val)} />\n          </div>\n        </div>\n      );\n    }\n  \n  }\n  \nclass Permutation extends React.Component { \n\n    renderTableSquare(val, i) { \n      return (\n        <TableSquare\n          value={val}\n          key={i}\n          className=\"square tableFont\"\n        />\n      );\n    }\n    renderTableCol2(j, perm) {\n      const typeMap = this.props.typeMap;\n      \n      var html = [];\n      let temp = Math.pow(2, typeMap);\n  \n      for (let i = 0; i < temp; i++) {       \n        html.push(this.renderTableSquare(perm[i][j], i));\n      }\n      return html;\n    }\n  \n    renderTableCol(j, perm) {     \n      return (\n        <div className=\"table-col\" key={j}>\n          {this.renderTableCol2(j, perm) \n          }\n        </div>\n      );\n    }\n    renderTablePermutation(perm) {\n      const typeMap = this.props.typeMap;\n      var html = [];      \n  \n      for (let j = 0; j < typeMap; j++)   \n        html.push(this.renderTableCol(j, perm)); \n  \n      return html;\n    }\n    render() {\n      const perm = this.props.perm;\n      \n      return this.renderTablePermutation(perm);\n    }\n  }\n  \nclass TableH extends React.Component {    \n    renderTableHead(a, i) {\n      return (\n        <TableSquare value={a} key={i} k={i} className=\"square tableFont\" />\n      );\n    }\n  \n    renderTableRow() {\n      const typeMap = this.props.typeMap;\n      let alphabet = [\"A\", \"B\", \"C\", \"D\"];\n      let a = [];\n      let i = 0\n      for (; i < typeMap; i++)\n        a.push(this.renderTableHead(alphabet[i], i));\n      a.push(this.renderTableHead(\"R\", i + 1));\n      return a;\n  \n    }\n    render() {\n      return <div className=\"tableHead\" key={-1}> {this.renderTableRow()} </div>;\n    }\n  }\n    \nclass TableValSelection extends React.Component { \n  \n    renderSelectionButton(i, j, k) {\n      return (\n        <SelectionButton\n          value={this.props.squares[i][j][0]}\n          onClick={() => this.props.onClick(i, j)} \n          key={k}\n        />\n      );\n    }\n  \n    renderTableCol() { \n      const typeMap = this.props.typeMap;\n      let a = [];\n      let r = typeMap;\n      let c = typeMap;\n      if (typeMap === 3) {\n        c = 4;\n        r = 2;\n      }\n      let key = 0;                  \n      for (let i = 0; i < c; i++) {\n        let l;\n        if (i === 2) l = 3;\n        else if (i === 3) l = 2;\n        else l = i;\n        for (let j = 0; j < r; j++) {\n          let k;\n          if (j % r === 2) k = 3;\n          else if (j % r === 3) k = 2;\n          else k = j;\n          a.push(this.renderSelectionButton(k, l, key++));\n        }\n      }\n      return a;\n    }\n  \n    render() {\n      return <div className=\"table-col-selButton\"> {this.renderTableCol()} </div>;\n    }\n  }  \n","import React from 'react';\nimport './css/optionButton.css';\n\nexport default class OptionButton extends React.Component {\n\n    render() {\n      return (\n        <div>\n        <div className=\"optionChoice\">\n          <div className=\"mapType\">\n            <p> Choose map type to display (variables number): </p>\n            <div>\n              <div className=\"buttonType\"><button className=\"btn-type\" onClick={() => this.props.setTypeMap(2)}>2</button></div>\n              <div className=\"buttonType\"><button className=\"btn-type\" onClick={() => this.props.setTypeMap(3)}>3</button></div>\n              <div className=\"buttonType\"><button className=\"btn-type\" onClick={() => this.props.setTypeMap(4)}>4</button></div>\n            </div>\n            <div>\n              <p>Form: {this.props.typeSol}</p>\n              <div >\n                <div className=\"buttonSettings\"><button className=\"btn-type\" onClick={() => this.props.setTypeSol(\"SOP\")}>SOP</button></div>\n                <div className=\"buttonSettings\"><button className=\"btn-type\" onClick={() => this.props.setTypeSol(\"POS\")}>POS</button></div>\n              </div>\n            </div>\n            <div>\n              <p>Set map to all: </p>\n              <div >\n                <div className=\"buttonSettings\"><button className=\"btn-type\" onClick={() => this.props.setMatrixSquare(0)}> 0</button></div>\n                <div className=\"buttonSettings\"><button className=\"btn-type\" onClick={() => this.props.setMatrixSquare(1)}> 1</button></div>\n                <div className=\"buttonSettings\"><button className=\"btn-type\" onClick={() => this.props.setMatrixSquare(\"X\")}> X</button></div>\n              </div>\n            </div>\n            <div>\n              <p>Get the result: </p>\n              <div>\n                <div className=\"elaborate\"><button className=\"btn-elaborate\" id=\"elabora\" onClick={(val) => this.props.onClick(val)}>Process</button></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      );\n    }\n  }","import React from 'react';\nimport './css/KMap.css';\nimport './css/drawGroup.css';\nimport $ from 'jquery';\nimport Map from './Map.js';\nimport TruthTable from './truthTable.js';\nimport OptionButton from './optionButton.js';\n\nexport default class KarnaughMap extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      let t = 4;\n      let a = this.getMatrixSquare(t);\n      let p = this.getMatrixPerm(t);\n      let m = this.setCoord(a, p, t);\n      let s = \"SOP\";\n      this.state = {\n        squares: m,   \n        typeMap: t,   \n        perm: p,      \n        typeSol: s    \n      };\n    }\n  \n    \n    getMatrixPerm(dim) {\n      let col = dim;\n      let row = Math.pow(2, dim);  \n      let a = [];                   \n      for (let i = 0; i < row; i++) {   \n        let temp = [];\n        for (let j = 0; j < col; j++)\n          temp[j] = 0;\n        a[i] = temp;\n      }\n  \n      for (let j = 0; j < col; j++) {       \n        let count = (Math.pow(2, dim)) / 2; \n  \n        for (let i = 0; i < row; i++) {     \n          let val = (i % (count * 2) < count) ? 0 : 1;  \n          a[i][j] = \"\" + val;                          \n        }\n        dim--;                        \n      }\n      return a;\n    }\n  \n    getMatrixSquare(dim) {      \n      let row = dim;\n      let col = dim;\n      let deep = 2;             \n                                \n      if (dim === 3) {          \n        row = 2;\n        col = 4;\n      }\n  \n      let a = [];                   \n      for (let i = 0; i < row; i++) {\n        let temp = [];\n        for (let j = 0; j < col; j++) {\n          let t = [];\n          for (let k = 0; k < deep; k++)\n            t[k] = 0;\n          temp[j] = t;\n        }\n        a[i] = temp;\n      }\n      return a;\n    }\n  \n    setMatrixSquare(val) {                \n      const squares = this.state.squares;\n      const typeMap = this.state.typeMap;\n      let r = typeMap;\n      let c = typeMap;\n      if (typeMap === 3) {\n        r = 2;\n        c = 4;\n      }\n      for (let i = 0; i < r; i++)\n        for (let j = 0; j < c; j++) {\n          squares[i][j][0] = val;\n        }\n      \n      this.reset();\n      this.setState({\n        squares: squares,\n      });\n    }\n  \n    reset(){                              \n      const typeMap = this.state.typeMap;\n      let r = typeMap;\n      let c = typeMap;\n      if (typeMap === 3) {\n        r = 2;\n        c = 4;\n      }\n      $(\"#elabora\").prop(\"disabled\", false);  \n  \n      for (let i = 0; i < r; i++)             \n        for (let j = 0; j < c; j++) {\n          $(\"#\" + i + j).removeClass();\n          $(\"#\" + i + j).html(\"\");\n          for (let k = 0; k < 10; k++)\n            $(\"#\" + i + j + k).remove();          \n        }\n      \n        $(\"#sol\").html(\"\");                 \n        $(\"#costo\").html(\"\");\n        $(\".Solution\").hide();\n        $(\".Solution\").css(\"left\",\"720px\");\n    }\n  \n    setCoord(squares, perm, typeMap) { \n      let r = typeMap;            \n      let c = typeMap;            \n      \n      if (typeMap === 3) {          \n        c = 4;\n        r = 2;\n      }\n      for (let i = 0; i < c; i++) {   \n        let l;\n        if (i === 2) l = 3;          \n        else if (i === 3) l = 2;\n        else l = i;\n  \n        for (let j = 0; j < r; j++) { \n          let k;\n          if (j % r === 2) k = 3;       \n          else if (j % r === 3) k = 2;\n          else k = j;\n          \n          let val = \"\";\n          let t = typeMap;\n  \n          let p = 0;\n          \n          do {\n            val += perm[i * r + j][p];    \n            p++;\n          } while (p < t / 2);\n          squares[k][l][1] = val;   \n          val = \"\";\n          p = Math.floor(t / 2);\n          if (typeMap === 3) {        \n            t = 2;\n            p = Math.floor(t / 2 + 1);\n          }\n          do {\n            val += perm[i * r + j][p];\n            p++;\n          } while (p < t);\n          squares[k][l][2] = val; \n          \n        }\n      }\n      \n      return squares;\n    }\n  \n    setTypeMap(val) {                     \n      let a = this.getMatrixSquare(val);\n      let b = this.getMatrixPerm(val);\n      let c = this.setCoord(a, b, val);\n      this.reset();\n      this.setState({\n        typeMap: val,\n        squares: c,\n        perm: b,\n      });\n    }\n  \n    setTypeSol(type){   \n      this.reset();\n      this.setState({\n        typeSol: type\n      })\n    }\n  \n    handleClick(i, j) { \n      const squares = this.state.squares; \n      if (squares[i][j][0] === 'X')\n        squares[i][j][0] = 0;\n  \n      else if (squares[i][j][0] === 0)\n        squares[i][j][0] = 1;\n      else\n        squares[i][j][0] = 'X';\n\n      this.reset();\n      this.setState({ \n        squares: squares,\n      });\n    }\n  \n    \n    Algorithm(squares) {\n  \n      $(\"#elabora\").prop(\"disabled\", true);\n      var dimCol, dimRow;\n      const typeSol = this.state.typeSol;\n      let val = (typeSol === \"SOP\")? 1 : 0 ;\n  \n      if (this.state.typeMap === 4) {\n        dimCol = 4;\n        dimRow = 4;\n      }\n      else\n        if (this.state.typeMap === 3) {\n          dimCol = 4;\n          dimRow = 2;\n        }\n        else {\n          dimCol = 2;\n          dimRow = 2;\n        }\n  \n      var groups = new Array(dimRow); \n  \n      for (let i = 0; i < dimRow; i++) {\n        groups[i] = new Array(dimCol); \n  \n        for (let j = 0; j < dimCol; j++)\n          groups[i][j] = []; \n      }\n  \n      var index = 0; \n      for (let i = 0; i < dimRow; i++) {\n        for (let j = 0; j < dimCol; j++) {\n  \n          var count = 0; \n  \n          if (squares[i][j][0] === val) { \n            \n            var TempI = i;\n            var TempJ = j;\n  \n            if (j === dimCol - 1)\n            {\n              let ok = true;\n              let count2 = 0;\n  \n              for (let height = i; height < dimRow && ok; height++)\n                if (squares[height][dimCol - 1][0] === val && squares[height][0][0] === val) {\n                  groups[height][0].push(index);\n                  groups[height][dimCol - 1].push(index);\n                  count2++;\n                }\n                else\n                  ok = false;\n  \n              if (count2 > 0) {\n                index++;\n  \n                if (!isPower(2, count2)) {\n                  groups[i + count2 - 1][0].pop();\n                  groups[i + count2 - 1][dimCol - 1].pop();\n                } \n              }\n  \n            }\n  \n            if (i === dimRow - 1)\n            {\n              let ok = true;\n              let count2 = 0;\n  \n              for (let column = j; column < dimCol && ok; column++)\n                if (squares[dimRow - 1][column][0] === val && squares[0][column][0] === val) {\n                  groups[dimRow - 1][column].push(index);\n                  groups[0][column].push(index);\n                  count2++;\n                }\n                else\n                  ok = false;\n  \n              if (count2 > 0) {\n                index++;\n  \n                if (!isPower(2, count2)) {\n                  groups[dimRow - 1][j + count2 - 1].pop();\n                  groups[0][j + count2 - 1].pop();\n                }\n              }\n  \n            }\n  \n            do { \n              groups[TempI][TempJ].push(index); \n              count++;\n              TempJ++;\n            } while (TempJ < dimCol && squares[TempI][TempJ][0] === val);\n            \n  \n            if (!isPower(2, count)) \n            {\n              groups[TempI][TempJ - 1].pop(); \n              count--;\n            }\n  \n            var CountVer;\n            var depth = 100; \n            var isOk = true; \n            for (let x = 0; x < count; x++) { \n              TempI = i + 1;\n              TempJ = j + x;\n              CountVer = 1;\n  \n              while (TempI < dimRow && CountVer < depth) {\n                if (squares[TempI][TempJ][0] !== val) {\n                  if (x !== 0 && CountVer !== depth) { \n  \n                    var Row = TempI;\n                    if (!isPower(2, x))\n                    {\n                      \n                      \n  \n                      if (!isPower(2, CountVer)) \n                        Row--;\n  \n                      groups[TempI][TempJ].push(index); \n  \n                      if (TempI >= depth) \n                        depth = TempI;\n                      else\n                        depth--;\n  \n                      for (; Row <= depth; Row++)\n                        for (let col = TempJ - 1; col <= x; col++)\n                          groups[Row][col].pop();\n  \n                      isOk = false; \n                    }\n                  }\n                  break;\n                }\n                groups[TempI][TempJ].push(index);\n                TempI++;\n                CountVer++;\n              }\n  \n              if (CountVer < depth)\n                depth = CountVer;\n  \n              if (!isPower(2, CountVer) && isOk) { \n                groups[TempI - 1][TempJ].pop();\n                depth--;\n              }\n            }\n            index++;\n          }\n        }\n  \n      }\n      console.log(\"Algorithm:\");\n      console.log(groups);\n      this.GroupUp(squares, $.extend(true, [], groups));\n    }\n  \n    GroupUp(squares, values) {\n      var groups = [];\n  \n      var group1 = [];\n      var group2 = [];\n      var obj1, obj2;\n      var dimCol, dimRow;\n      const typeSol = this.state.typeSol;\n      let val = (typeSol === \"SOP\")? 1 : 0 ;\n  \n      if (this.state.typeMap === 4) {\n        dimCol = 4;\n        dimRow = 4;\n      }\n      else\n        if (this.state.typeMap === 3) {\n          dimCol = 4;\n          dimRow = 2;\n        }\n        else {\n          dimCol = 2;\n          dimRow = 2;\n        }\n  \n      if(squares[0][0][0]===val && squares[0][dimCol-1][0]===val && squares[dimRow-1][0][0]===val && squares[dimRow-1][dimCol-1][0]===val)\n      {\n  \n        obj1 = {\n          row: 0,\n          col: 0\n        };\n  \n        group1.push(obj1);\n        \n        obj1 = {\n          row: 0,\n          col: dimCol-1\n        };\n  \n        group1.push(obj1);\n        \n        obj1 = {\n          row: dimRow-1,\n          col: 0\n        };\n  \n        group1.push(obj1);\n  \n        obj1 = {\n          row: dimRow-1,\n          col: dimCol-1\n        };\n  \n        group1.push(obj1);\n  \n        groups.push(group1);\n  \n        group1=[];\n       \n      }\n  \n      for (let i = 0; i < dimRow; i++) {\n        for (let j = 0; j < dimCol; j++) {\n  \n          if (squares[i][j][0] === val) { \n  \n            var index = values[i][j][0];\n            var startrow = i;\n            var startCol = j;\n  \n            if (j === dimCol - 1) {\n              while (startrow < dimRow && values[startrow][j][0] === index && values[startrow][0][0] === index) {\n  \n                obj1 = {\n                  row: startrow,\n                  col: 0\n                };\n  \n                obj2 = {\n                  row: startrow,\n                  col: j\n                };\n  \n                values[startrow][j].shift();\n                values[startrow][0].shift();\n  \n                group1.push(obj1);\n                group1.push(obj2);\n  \n                startrow++;\n              }\n  \n              if (group1.length > 0) {\n                groups.push(group1);\n                group1 = [];\n                index = values[i][j][0];\n              }\n  \n  \n              startrow = i;\n              startCol = j;\n  \n            }\n  \n            if (i === dimRow - 1) {\n              while (startCol < dimCol && values[i][startCol][0] === index && values[0][startCol][0] === index) {\n  \n                obj1 = {\n                  row: i,\n                  col: startCol\n                };\n  \n                obj2 = {\n                  row: 0,\n                  col: startCol\n                };\n  \n                values[0][startCol].shift();\n                values[i][startCol].shift();\n  \n                group1.push(obj1);\n                group1.push(obj2);\n  \n                startCol++;\n              }\n  \n              if (group1.length > 0) {\n                group1.sort(function (a, b) { return a.row - b.row }); \n                groups.push(group1);\n                group1 = [];\n                index = values[i][j][0];\n              }\n  \n  \n              startrow = i;\n              startCol = j;\n            }\n  \n            while (startCol < dimCol && values[startrow][startCol][0] === index)\n              startCol++;\n  \n            while (startrow < dimRow && values[startrow][startCol - 1][0] === index)\n              startrow++;\n  \n  \n            for (let Endrow = i; Endrow < startrow; Endrow++)\n              for (let EndCol = j; EndCol < startCol; EndCol++) {\n                obj1 = {\n                  row: Endrow,\n                  col: EndCol\n                };\n                group1.push(obj1);\n              }\n  \n            groups.push(group1);\n  \n            startrow = i;\n            startCol = j;\n  \n            while (startrow < dimRow && values[startrow][startCol][0] === index)\n              startrow++;\n  \n            while (startCol < dimCol && values[startrow - 1][startCol][0] === index)\n              startCol++;\n  \n            for (let Endrow = i; Endrow < startrow; Endrow++)\n              for (let EndCol = j; EndCol < startCol; EndCol++) {\n                obj1 = {\n                  row: Endrow,\n                  col: EndCol\n                };\n                group2.push(obj1);\n              }\n  \n            var equal = true;\n            if (group1.length === group2.length)\n            {\n              for (let v = 0; v < group1.length && equal; v++)\n                if (group1[v].row !== group2[v].row && group1[v].col !== group2[v].col)\n                  equal = false;\n            }\n                  else\n                  groups.push(group2);\n  \n            if (!equal)\n             groups.push(group2);\n  \n            group1 = [];\n            group2 = [];\n  \n            for (let k = 0; k < dimRow; k++)\n              for (let z = 0; z < dimCol; z++)\n                if (values[k][z][0] === index)\n                  values[k][z].shift();\n  \n          }\n  \n        }\n      }\n      console.log(\"GroupUp:\");\n      console.log(groups);\n      this.CleanAlgorithm($.extend(true, [], groups));\n    }\n    \n    CleanAlgorithm(groups) {\n      groups.sort(function (a, b) { return a.length - b.length }); \n      groups.reverse(); \n  \n      console.log(\"CleanAlgorithm:\");\n      console.log(groups);\n  \n       var temp = $.extend(true, [], groups); \n       \n       for(let i=0; i<temp.length; i++){              \n        for(let j=i+1; j<temp.length; j++){           \n  \n          if(temp[i].length<temp[j].length){          \n            let p=i;                                  \n            while(temp[p].length<temp[p+1].length){   \n              let t = temp[p];                        \n              temp[p]=temp[p+1];                      \n              temp[p+1]=t;\n  \n              t = groups[p];                          \n              groups[p]=groups[p+1];\n              groups[p+1]=t;\n            }\n          }\n  \n          for(let k=0; k<temp[i].length; k++){          \n            for(let l=0; l<temp[j].length; l++)         \n              if((temp[i][k].row===temp[j][l].row) && (temp[i][k].col===temp[j][l].col)){     \n                for(let p=l;p<temp[j].length-1;p++) temp[j][p] = temp[j][p+1];                  \n                delete temp[j][temp[j].length-1];        \n                temp[j].length--;                       \n              }     \n          }   \n        }\n      }\n  \n        var found,deleted,obj11,value;\n    for (let v = 0; v < groups.length; v++) \n    {\n        deleted = true;\n      if (temp[v].length>0)\n        for (let index = 0; index < groups[v].length && deleted; index++) \n        {\n          obj11 = groups[v][index];\n          found = false;\n          for (let k = 0; k < groups.length && !found; k++)\n          {\n  \n            if (v !== k && temp[k].length>0) \n            {\n            \t// eslint-disable-next-line\n              value = groups[k].findIndex((obj2) => obj11.row === obj2.row && obj11.col === obj2.col); \n              if (value !== -1) \n                found = true;\n            }\n          }\n  \n            if(found===false)\n             deleted=false;\n        }\n  \n        if(deleted===true)\n         temp[v]=[];\n  \n      }\n      console.log(temp);\n      this.Solution(temp, groups);\n      this.drawGroup(temp, groups);\n    }\n  \n    Solution(temp, groups) {                         \n      const matrice = this.state.squares;           \n      var alp = [\"A\", \"B\", \"C\", \"D\"];               \n      var soln=\"\";                              \n      var vettoreSol=[];                              \n      var k, j, t;\n      \n      var elementoR, elementoC;                    \n      var flag;                                    \n      var coord;                                  \n      var ner;\n      var tipoSol=this.state.typeSol;\n      for (let i = 0; i < temp.length; i++) {\n  \n        if (temp[i].length > 0) {\n          k = 0;\n          elementoR = groups[i][0].row;              \n          elementoC = groups[i][0].col;\n  \n          ner = 0;\n          while (ner < groups[i].length && groups[i][ner].row === elementoR)  \n          {\n            ner++;\n          }\n  \n          \n          t = 0;\n          coord = matrice[elementoR][elementoC][1];  \n          while (t < coord.length) {\n            j = 1;\n            flag = true;\n            while (j < groups[i].length && groups[i][j].row === elementoR) {       \n              if (coord.charAt(t) !== matrice[elementoR][groups[i][j].col][1].charAt(t)) {  \n                flag = false;                                               \n                break;\n              }\n              j++;\n            }\n            if (flag) {                        \n              if(tipoSol===\"SOP\")                \n              {\n                if (coord.charAt(t) === \"0\") {\n                  soln += \"'\" + alp[k];\n                }\n                else{\n                  soln += alp[k];\n                }\n              }\n              else{                               \n                if (coord.charAt(t) === \"0\") {\n                  soln += alp[k];\n                }\n                else{\n                  soln += \"'\" + alp[k];\n                }\n                soln += \"+\";\n              }\n            }\n            k++;\n            t++;\n          }\n  \n          \n          t = 0;\n          coord = matrice[elementoR][elementoC][2];    \n          while (t < coord.length) {\n            j = ner;\n            flag = true;\n            while (j < groups[i].length && groups[i][j].col === elementoC) {   \n              if (coord.charAt(t) !== matrice[groups[i][j].row][elementoC][2].charAt(t)) { \n                flag = false;                                     \n                break;\n              }\n              j += ner;\n            }\n            if (flag) {                        \n              if(tipoSol===\"SOP\")                 \n              {\n                if (coord.charAt(t) === \"0\") {\n                  soln +=  \"'\" + alp[k];\n                }\n                else{\n                  soln += alp[k];\n                }\n              }\n              else{                               \n                if (coord.charAt(t) === \"0\") {\n                  soln += alp[k];\n                }\n                else{\n                  soln += \"'\" + alp[k];\n                }\n                soln += \"+\";\n              }\n            }\n            k++;\n            t++;\n          }\n          if(tipoSol===\"POS\")     \n          {\n            soln=soln.substr(0,soln.length-1);\n          }\n          vettoreSol.push(soln);\n          soln=\"\";\n        }\n      }\n  \n      if (vettoreSol[0] === \"\" || !vettoreSol[0])   \n      {\n        \n        if (matrice[0][0][0] === 0) {\n          vettoreSol[0]=\"0\";\n        }\n        else {\n          vettoreSol[0]=\"1\";\n        }\n      }\n      this.drawSolution(vettoreSol);\n    }\n  \n    drawGroup(temp, groups) {\n      let color = [\"red\", \"blue\", \"green\", \"orange\", \"#50C878\",\"lightblue\",\"#CD7F32\",\"#ff6699\"];  \n      let c = -1; \n      for (let i = 0; i < temp.length; i++) { \n        if (temp[i].length > 0 && groups[i].length !== Math.pow(2, this.state.typeMap)) {\n          c++;\n          let j = 0;\n          let FirstElCol = groups[i][0].col;\n          let FirstElRow = groups[i][0].row;\n          while (j < groups[i].length) {                                    \n            let element = $(\"#\" + groups[i][j].row + groups[i][j].col);    \n\n            if (element.attr('class') && $(\"#\" + element.attr('id') + c)) { \n              element.after(\"<div id=\" + element.attr('id') + c + \"></div>\"); \n              element = $(\"#\" + groups[i][j].row + groups[i][j].col + c);    \n            }\n            \n            element.css(\"border-color\", color[c]);                            \n            element.append(\"<div class='backgr' style='background-color: \"+color[c]+\"'></div>\"); \n\n            \n            let right = this.checkElInGroups(j, groups[i], \"right\");\n            let bottom = this.checkElInGroups(j, groups[i], \"bottom\");\n            let left = this.checkElInGroups(j, groups[i], \"left\");\n            let top = this.checkElInGroups(j, groups[i], \"top\");\n  \n          \n            \n          \n            if (right) {\n              if (bottom) {\n                if (left) {\n                  if (groups[i][j].col === FirstElCol) element.addClass(\"TopLeft\");\n                  else if (j === ((groups[i].length / 2) - 1) || j === (groups[i].length - 1)) element.addClass(\"TopRow\");\n                  else element.addClass(\"top\")\n                }\n                else if (top) {\n                  if (j === groups[i].length - 2 || j === groups[i].length - 1) element.addClass(\"BotLeft\");\n                  else if (groups[i][j].row === FirstElRow) element.addClass(\"TopLeft\");\n                  else element.addClass(\"left\");\n                }\n                else  element.addClass(\"TopLeft\");\n              }\n              else if (top) {\n                if (left) {\n                  if (groups[i][j].col === FirstElCol) element.addClass(\"BotLeft\");\n                  else if (j === groups[i].length - 1 || j === (groups[i].length/2) - 1) element.addClass(\"BotRow\");\n                  else element.addClass(\"bot\");\n                }\n                else element.addClass(\"BotLeft\");\n              }\n              else if (left) {\n                if (j === 0) element.addClass(\"ClosedLeft\")\n                else if (j === groups[i].length - 1) element.addClass(\"ClosedRow\");\n                else element.addClass(\"top-bot\");\n              }\n              else element.addClass(\"ClosedLeft\");\n            }\n  \n            else if (top) {\n              if (left) {\n                if (bottom) {\n                  if (groups[i][j].row === FirstElRow) element.addClass(\"TopRow\");\n                  else if (j === groups[i].length - 1 || j === groups[i].length - 2) element.addClass(\"BotRow\");\n                  else element.addClass(\"Rowht\");\n                }\n                else element.addClass(\"BotRow\");\n              }\n              else if (bottom) {\n                if (j === 0) element.addClass(\"ClosedTop\");\n                else if (j === groups[i].length - 1) element.addClass(\"ClosedBot\");\n                else element.addClass(\"left-Rowht\");\n              }\n              else element.addClass(\"ClosedBot\");\n            }\n  \n            else if (left) {\n              if (bottom) element.addClass(\"TopRow\");\n              else element.addClass(\"ClosedRow\");\n            }\n            else if (bottom) element.addClass(\"ClosedTop\");\n            else element.addClass(\"monoGroup\");\n            j++;\n          }\n        }\n      }\n    }\n  \n    checkElInGroups(j, groups, lato) { \n      const matrix = this.state.squares;\n      let r = matrix[0].length;\n      let c = matrix[0].length;\n      if (this.state.typeMap === 3) {\n        r = 2;\n        c = 4;\n      }\n      \n      for (let k = 0; k < groups.length; k++) {\n        if (lato === \"right\" && (groups[k].col === (groups[j].col + 1) % c && groups[k].row === groups[j].row % r))\n          return true;\n        if (lato === \"bottom\" && (groups[k].col === groups[j].col % c && groups[k].row === (groups[j].row + 1) % r))\n          return true;\n        if (lato === \"left\") {\n          let col = groups[j].col - 1;\n          if (col < 0) col = c - 1;\n          if ((groups[k].col === col % c && groups[k].row === groups[j].row % r))\n            return true;\n        }\n        if (lato === \"top\") {\n          let row = groups[j].row - 1;\n          if (row < 0) row = r - 1;\n          if ((groups[k].col === groups[j].col % c && groups[k].row === row % r))\n            return true;\n        }\n      }\n      return false;\n    }\n  \n    drawSolution(vettoreSol){   \n      $(\".Solution\").show();\n  \n      let costo=0; \n      if(vettoreSol[0]===\"0\" || vettoreSol[0]===\"1\"){ \n        $(\"#sol\").append(\"<div>\"+ vettoreSol[0]+ \"</div>\");\n      }\n      else{\n        const typeSol = this.state.typeSol;\n        let s = (typeSol===\"SOP\")? \"+\":\"·\";   \n        let cls = (typeSol===\"SOP\")? \"groupSop\":\"groupPos\"; \n\n        \n        let color = [\"red\", \"blue\", \"green\", \"orange\", \"#50C878\",\"lightblue\",\"#CD7F32\",\"#ff6699\"];  \n  \n        for(let i=0; i<vettoreSol.length; i++){ \n          \n          $(\"#sol\").append(\"<div id='sol\"+i+\"' class='\"+cls+\"' style='background-color: \"+color[i]+\"'></div>\");\n          \n          for(let j=0; j<vettoreSol[i].length; j++){ \n\n            if(vettoreSol[i][j]!==\"'\")\n              $(\"#sol\"+i).append(vettoreSol[i][j]+\" \"); \n            else{\n              \n              $(\"#sol\"+i).append(\"<span style='text-decoration: overline'>\"+vettoreSol[i][++j]+\"</span> \");\n            }\n            if(vettoreSol[i][j]!==\"+\") costo++; \n          }\n          if(i!==vettoreSol.length-1) $(\"#sol\").append(\"<div class='plus'> \"+s+\" </div>\"); \n        }\n      }\n      $(\"#costo\").html(\"Literal Cost: \"+costo); \n\n      \n      $(\".Solution\").css(\"left\", parseInt($(\".Solution\").css(\"left\"))-parseInt($(\".Solution\").css(\"width\"))/2);\n    }\n  \n    render() {\n      \n      const values = this.state.squares;\n      const typeMap = this.state.typeMap;\n      const perm = this.state.perm;\n      const typeSol = this.state.typeSol;\n      \n      let i = 0; \n      return (\n        <div key={i++}>\n            <div className=\"title\"><h1> Karnaugh Map Solver </h1></div>\n          <div className=\"bodyPage\" key={i++}>\n            <p className=\"nameTab\"> Truth Table </p>\n            <div className=\"truthTable\" key={i++}>\n              <TruthTable\n                squares={values}\n                typeMap={typeMap}\n                perm={perm}\n                key={i++}\n                onClick={(i, j) => this.handleClick(i, j)}\n                setRowOrColCell={(i, j, k, val) => this.setRowOrColCell(i, j, k, val)}\n              />\n            </div>\n            <div className=\"kMap\">\n              <Map\n                squares={values}\n                typeMap={typeMap}\n                onClick={(i, j) => this.handleClick(i, j)}\n              />\n            </div>\n  \n            <OptionButton\n              squares={values}\n              typeMap={typeMap}\n              typeSol={typeSol}\n              onClick={() => this.Algorithm(values)}\n              setTypeSol={(val) => this.setTypeSol(val)}\n              setMatrixSquare={(val) => this.setMatrixSquare(val)}\n              setTypeMap={(val) => this.setTypeMap(val)}\n            />\n            <div className=\"Solution\">\n              <div>{typeSol} form:</div>\n              <div className=\"sol\" id=\"sol\">  \n              </div>\n              <div id=\"costo\"> \n                </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  function isPower(x, y) {\n    if (x === 1)\n      return (y === 1);\n  \n    var pow = 1;\n    while (pow < y)\n      pow *= x;\n  \n    return (pow === y);\n  }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/css/index.css';\nimport KarnaughMap from './components/KMap.js';\n\nReactDOM.render(<KarnaughMap key={0} />, document.getElementById(\"root\"));"],"sourceRoot":""}